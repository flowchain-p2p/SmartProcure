{
	"info": {
		"_postman_id": "79c85d36-9f2a-4e51-8b9a-10e87c39e123",
		"name": "SmartProcure Category API",
		"description": "Collection for testing the Category API endpoints of the Instatenders Multi-tenant application",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login (Get Token)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"",
									"if (responseJson.token) {",
									"    pm.environment.set('authToken', responseJson.token);",
									"    console.log('Token saved to environment variable: authToken');",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{email}}\",\n    \"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						},
						"description": "Login to get the authentication token"
					},
					"response": []
				}
			],
			"description": "Authentication endpoints to get token for API access"
		},
		{
			"name": "Categories",
			"item": [
				{
					"name": "Get All Categories",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"categories"
							]
						},
						"description": "Get all categories for the current tenant"
					},
					"response": []
				},
				{
					"name": "Get Category by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/categories/{{categoryId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"categories",
								"{{categoryId}}"
							]
						},
						"description": "Get a single category by its ID"
					},
					"response": []
				},
				{
					"name": "Get Child Categories",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/categories/{{categoryId}}/children",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"categories",
								"{{categoryId}}",
								"children"
							]
						},
						"description": "Get all child categories for a parent category"
					},
					"response": []
				},
				{
					"name": "Create Root Category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"",
									"if (responseJson.data && responseJson.data._id) {",
									"    pm.environment.set('rootCategoryId', responseJson.data._id);",
									"    console.log('Root Category ID saved to environment variable: rootCategoryId');",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Electronics\",\n    \"image\": \"/images/electronics.jpg\",\n    \"description\": \"Electronics and gadgets\",\n    \"attributes\": {\n        \"icon\": \"computer\",\n        \"showInNav\": true,\n        \"displayOrder\": 1\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"categories"
							]
						},
						"description": "Create a new root category (level 0) without a parent"
					},
					"response": []
				},				{
					"name": "Create Child Category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"",
									"if (responseJson.data && responseJson.data._id) {",
									"    pm.environment.set('childCategoryId', responseJson.data._id);",
									"    console.log('Child Category ID saved to environment variable: childCategoryId');",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Laptops\",\n    \"image\": \"/images/laptops.jpg\",\n    \"description\": \"Laptop computers and accessories\",\n    \"parent\": \"{{rootCategoryId}}\",\n    \"attributes\": {\n        \"icon\": \"laptop\",\n        \"showInNav\": true,\n        \"displayOrder\": 1\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"categories"
							]
						},
						"description": "Create a new child category (level > 0) with a parent reference"
					},
					"response": []
				},
				{
					"name": "Categories bulk creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"",
									"if (responseJson.data && responseJson.data.length > 0) {",
									"    // Store the ID of the first category as a sample",
									"    if (responseJson.data[0]._id) {",
									"        pm.environment.set('multipleCategoryFirstId', responseJson.data[0]._id);",
									"        console.log('First category ID saved to environment variable: multipleCategoryFirstId');",
									"    }",
									"    console.log(`Created ${responseJson.count} categories successfully`);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"name\": \"Smartphones\",\n    \"image\": \"/images/smartphones.jpg\",\n    \"description\": \"Mobile phones and accessories\",\n    \"parent\": \"{{rootCategoryId}}\",\n    \"attributes\": {\n      \"icon\": \"smartphone\",\n      \"showInNav\": true,\n      \"displayOrder\": 2\n    }\n  },\n  {\n    \"name\": \"Tablets\",\n    \"image\": \"/images/tablets.jpg\",\n    \"description\": \"Tablet computers and accessories\",\n    \"parent\": \"{{rootCategoryId}}\",\n    \"attributes\": {\n      \"icon\": \"tablet\",\n      \"showInNav\": true,\n      \"displayOrder\": 3\n    }\n  },\n  {\n    \"name\": \"Gaming\",\n    \"image\": \"/images/gaming.jpg\",\n    \"description\": \"Gaming devices and accessories\",\n    \"attributes\": {\n      \"icon\": \"gamepad\",\n      \"showInNav\": true,\n      \"displayOrder\": 4\n    }\n  }\n]"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"categories"
							]
						},
						"description": "Create multiple categories at once, with or without parent references"
					},
					"response": []
				},
				{
					"name": "Update Category",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Gaming Laptops\",\n    \"image\": \"/images/gaming-laptops.jpg\",\n    \"description\": \"High-performance gaming laptops and accessories\",\n    \"attributes\": {\n        \"icon\": \"laptop\",\n        \"showInNav\": true,\n        \"displayOrder\": 2,\n        \"featured\": true\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/categories/{{childCategoryId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"categories",
								"{{childCategoryId}}"
							]
						},
						"description": "Update an existing category's name or attributes"
					},
					"response": []
				}
			],
			"description": "Endpoints for managing hierarchical Categories"
		}
	]
}
